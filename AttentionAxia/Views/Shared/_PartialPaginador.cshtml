@model AttentionAxia.DTOs.PaginadorDTO

@{ var cantidadPaginas = (int)Math.Ceiling((double)Model.TotalDeRegistros / Model.RegistrosPorPagina); }

@{
    int paginaUno = 1;
    int Inicial = 1;
    var activoInicial = Model.PaginaActual > 1 ? string.Empty : "page-item active";
    var activoFinal = Model.PaginaActual == cantidadPaginas ? "page-item active" : "page-item";


    var radio = 8;
    var cantidadMaximaDePaginas = radio * 2;
    int Final = (cantidadPaginas > cantidadMaximaDePaginas) ? cantidadMaximaDePaginas : cantidadPaginas;
    if (Model.PaginaActual > radio + 1)
    {
        Inicial = Model.PaginaActual - radio;
        if (cantidadPaginas > Model.PaginaActual + radio)
        {
            Final = Model.PaginaActual + radio;
        }
        else
        {
            Final = cantidadPaginas;
        }
    }
}

<div class="col-lg-10">
    <ul class="pagination pagination-lg">
        @{ Model.ValoresQueryString["page"] = 1;
            Model.ValoresQueryString["pageSize"] = Model.RegistrosPorPagina; }
        @if (Model.PaginaActual == 1)
        {
            Model.ValoresQueryString["page"] = 1;
            <li class="invisible" title="anterior">
                <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        else
        {
            Model.ValoresQueryString["page"] = Model.PaginaActual - 1;
            <li title="anterior">
                <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{ Model.ValoresQueryString["page"] = 1;
            Model.ValoresQueryString["pageSize"] = Model.RegistrosPorPagina; }
        <li class="@activoInicial">
            <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link">
                @paginaUno.ToString()
            </a>
        </li>
        @if (paginaUno + 3 != Model.PaginaActual)
        {
            if (Model.PaginaActual >= paginaUno && Model.PaginaActual <= paginaUno + 3)
            {

            }
            else
            {
                <li class="disabled">
                    <a>
                        ...
                    </a>
                </li>
            }
        }

        @for (int i = Inicial + 1; i <= Final - 1; i++)
        {
            Model.ValoresQueryString["page"] = i; if (i == Model.PaginaActual)
            {
                <li class="page-item active">
                    <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link">
                        @i.ToString()
                    </a>
                </li>
            }
            else
            {
                <li>
                    <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link">
                        @i.ToString()
                    </a>
                </li>
            }
        }
        @if (cantidadPaginas - 3 != Model.PaginaActual)
        {
            if (Model.PaginaActual >= cantidadPaginas - 2 || Model.PaginaActual <= cantidadMaximaDePaginas
                - 4 && Model.PaginaActual > cantidadPaginas - cantidadMaximaDePaginas)
            {

            }
            else
            {
                <li class="disabled">
                    <a>
                        ...
                    </a>
                </li>
            }
        }


        @{Model.ValoresQueryString["page"] = cantidadPaginas; }
        @if (cantidadPaginas != paginaUno)
        {
            <li class="@activoFinal">
                <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link">
                    @cantidadPaginas.ToString()
                </a>
            </li>
        }
        @if (Model.PaginaActual == cantidadPaginas)
        {
            Model.ValoresQueryString["page"] = cantidadPaginas;

            <li class="invisible" title="siguiente">
                <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
        else
        {
            Model.ValoresQueryString["page"] = Model.PaginaActual + 1;
            <li title="siguiente">
                <a href="@Url.Action(null, Model.ValoresQueryString)" class="page-link" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</div>
