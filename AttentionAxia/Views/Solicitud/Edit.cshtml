@model AttentionAxia.Models.Solicitud

@{
    ViewBag.Title = "Solicitud - Axia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-lg">
    <h2 class="text-center">Editar Solicitud</h2>
    <hr />
    <form id="__AjaxAntiForgeryForm" class="needs-validation" method="post" novalidate enctype="multipart/form-data">
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Responsable</label>
                @Html.DropDownList("ResponsableId", null, "--Seleccione--", htmlAttributes: new { @class = "form-control", required = "required" })
                <div class="invalid-feedback">
                    El responsable es requerido-
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Estado</label>
                @Html.DropDownList("EstadoId", null, "--Seleccione--", htmlAttributes: new { @class = "form-control", required = "required" })
                <div class="invalid-feedback">
                    El estado es requerido
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Sprint Inicio</label>
                @Html.DropDownList("SprintInicioId", ViewBag.DDL_SprintsInicio as SelectList, "--Seleccione--", htmlAttributes: new { @class = "form-control", required = "required" })
                <div class="invalid-feedback">
                    El sprint inicio es requerido
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Sprint Fin</label>
                @Html.DropDownList("SprintFinId", ViewBag.DDL_SprintsFin as SelectList, "--Seleccione--", htmlAttributes: new { @class = "form-control", required = "required" })
                <div class="invalid-feedback">
                    El sprint fin es requerido
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">Fecha inicial del sprint:</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="far fa-calendar-alt"></i>
                    </span>
                </div>
                <input type="text" class="form-control float-right" name="DateInitial" disabled value="@Model.FechaInicioPlaneada" id="DateInitialSprint" required>
                <div class="invalid-feedback">
                    la fecha de inicio es requerida.
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">Fecha fin del sprint:</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="far fa-calendar-alt"></i>
                    </span>
                </div>
                <input type="text" class="form-control float-right" name="DateEnd" disabled value="@Model.FechaFinPlaneada" id="DateEndSprint" required>
                <div class="invalid-feedback">
                    la fecha fin es requerida.
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Célula iniciativa</label>
                @Html.DropDownList("CelulaId", ViewBag.DDL_Celulas as SelectList, "--Seleccione--", htmlAttributes: new { @class = "form-control", required = "required" })
                <div class="invalid-feedback">
                    El campo célula es requerido.
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Iniciativa</label>
                <textarea id="text_iniciativa" class="form-control" maxlength="5000" minlength="10" placeholder="Escriba la iniciativa" required>@Model.Iniciativa</textarea>
                <div class="invalid-feedback">
                    La Iniciativa debe tener entre 10 y 5000 caracteres.
                </div>
            </div>
            <label class="form-check-label ml-2 text-muted text-sm">
                Maximo 5000 caracteres.
            </label>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Archivo</label>
                <div class="custom-file">
                    <input class="custom-file-input" id="fileAxiaEdit" type="file" lang="es" accept=".pdf,.doc,.docx">
                    <label class="custom-file-label" for="validatedCustomFile">
                        <i class="fa fa-file-pdf mr-2"></i>
                        <i class="fa fa-file-word mr-2"></i>
                        @if (string.IsNullOrWhiteSpace(Model.NombreArchivo))
                        {
                            <strong>Seleccione archivo...</strong>
                        }
                        else
                        {
                            <strong>@Model.NombreArchivo</strong>
                        }

                    </label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-3">Avance</label>
                <input id="avance_solicitud_edit" type="text" name="Avance" value="@Model.Avance">
            </div>
            <div class="invalid-feedback">
                El avance es requerido.
            </div>
        </div>
        <hr />
        <div class="form-group mt-4">
            <div class="d-flex justify-content-end">
                <a class="btn btn-outline-light text-dark mr-4" href="@Url.Action("Index","Solicitudes")"><i class="fa fa-arrow-alt-circle-left text-dark mr-3"></i>Cancelar</a>
                <button type="submit" id="btn-save" class="btn btn-primary mr-2"><i class="fa fa-save mr-3"></i>Guardar</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        let error = '<span class="fa fa-times-circle text-danger"> Error</span>';
        let warning = '<span class="fa fa-exclamation-circle text-warning"> Advertencia</span>';
        var originalBtnContent = $('#btn-save').html();

        $(function () {
            $('input[name="DateInitial"]').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Cancelar',
                    applyLabel: 'Aplicar',
                    daysOfWeek: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],
                    monthNames: [
                        'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
                    ]
                },
                minDate: moment().add(-2, 'years').toDate()
            });
        });

        $(function () {
            $('input[name="DateEnd"]').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Cancelar',
                    applyLabel: 'Aplicar',
                    daysOfWeek: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],
                    monthNames: [
                        'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
                    ]
                },
                maxDate: moment().add(1, 'years').toDate(),
            });
        });

        $('input[type=file]').change(function () {
            var val = $(this).val().toLowerCase(),
                regex = new RegExp("(.*?)\.(pdf|doc|docx)$");
            if (!(regex.test(val))) {
                $(this).val();
                toastr.error("Ingrese un archivo valido, Pdf o Word");
                $('#fileAxia').val(null);
            }
        });
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });

        $('#avance_solicitud_edit').ionRangeSlider({
            min: 0,
            max: 100,
            type: 'single',
            step: 1,
            postfix: '%',
            prettify: false,
            hasGrid: true,
            disable: false
        });

        $("#SprintInicioId").change(function () {
            console.log("entro");
            GetDateBySprintInitial($("#SprintInicioId").val());
        });

        $("#SprintFinId").change(function () {
            GetDateBySprintFinal($("#SprintFinId").val());
        });

        function GetDateBySprintInitial(sprintInitialId) {
            let url = "@Url.Action("GetDateBySprintInitial", "Solicitud")";
            $.get(url, { SprintInicioId: sprintInitialId }, function (data) {
                console.log(data);
                if (data.hayFecha) {
                    $('#DateInitialSprint').removeAttr('disabled');
                    const fecha = moment(data.fecha, "DD/MM/YYYY").format("DD/MM/YYYY");
                    $('#DateInitialSprint').val(fecha);
                }
                else {
                    toastr.error("No hay registro de fecha inicial para el sprint.");
                }
            });
        }

        function GetDateBySprintFinal(sprintFinalId) {
            let url = "@Url.Action("GetDateBySprintFinal", "Solicitud")";
            $.get(url, { SprintFinId: sprintFinalId }, function (data) {
                console.log(data);
                if (data.hayFecha) {
                    $('#DateEndSprint').removeAttr('disabled');
                    const fecha = moment(data.fecha, "DD/MM/YYYY").format("DD/MM/YYYY");
                    $('#DateEndSprint').val(fecha);
                }
                else {
                    toastr.error("No hay registro de fecha final para el sprint.");
                }
            });
    }

        $('#btn-save').click(function (e) {
            e.preventDefault();
            var forms = document.querySelectorAll('.needs-validation')
             // Loop over them and prevent submission
            Array.prototype.slice.call(forms).forEach(function (form) {
                if (form.checkValidity()) {
                    form.classList.add('was-validated')
                    $('#btn-save').html('<span class="spinner-border spinner-border-sm mr-2" role="status" aria-hidden="true"></span>Guardando...');
                    $('#btn-save').prop("disabled", true);
                    const solicitud = $('#Id').val();
                    const responsable = $('#ResponsableId').val();
                    const estado = $('#EstadoId').val();
                    const sprintinicio = $('#SprintInicioId').val();
                    const sprintfin = $('#SprintFinId').val();
                    const celula = $('#CelulaId').val();
                    const iniciativa = $('#text_iniciativa').val();
                    const avance = $('#avance_solicitud_edit').val();
                    const dateInitialSprint = $('#DateInitialSprint').val();
                    const dateFinalSprint = $('#DateEndSprint').val();
                    const archivo = $('#fileAxiaEdit')[0].files[0];
                    var formdata = new FormData();
                    formdata.append("filedocument", archivo);
                    formdata.append("json", JSON.stringify({
                        SolicitudId: solicitud,
                        ResponsableId: responsable,
                        EstadoId: estado,
                        SprintInicioId: sprintinicio,
                        SprintFinId: sprintfin,
                        CelulaId: celula,
                        Iniciativa: iniciativa,
                        FechaInicial: dateInitialSprint,
                        FechaFinal: dateFinalSprint,
                        Avance: avance
                    }));
                    const url = "@Url.Action("EditSolicitud", "Solicitud")";
                    $.ajax({
                        url: url,
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: formdata,
                        cache: false
                    })
                        .done(function (data) {
                            if (!data.IsSuccess) {
                                alertify.alert(error, data.Message);
                                $('#btn-save').html(originalBtnContent);
                                $('#btn-save').removeAttr('disabled');
                            }
                            else{
                                window.location.href = "@Url.Action("Index", "Solicitudes")";;
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error en la solicitud:", textStatus, errorThrown);
                     });
                 }
                 form.classList.add('was-validated')
             })
        });

</script>
}
